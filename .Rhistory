colnames(lynx)
plot(iris)
plot(lynx)
View(lynx)
?lynx # dataframe "lynx" contém duas colunas: "Year" (ano) e "trappings" (armadilhas), com 114 observações para cada variável
plot(lynx)
plot(lynx, ylab = 'Plots com Dataframes', xlab = '')
plot(lynx)
plot(lynx, ylab = 'Plots com Dataframes', xlab = '')
plot(lynx, ylab = 'Plots com Dataframes', xlab = 'Observações')
plot(lynx, main = 'Plots com Dataframes')
plot(lynx, main = 'Plots com Dataframes', col = 'red')
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 52,  cex.main = 1.5)
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 62,  cex.main = 1.5)
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 52,  cex.main = 2.5)
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 52,  cex.main = 1.5) # muda a cor e o tamanho do titulo
library(datasets)
hist(warpbreaks$breaks)
View(airquality)
View(airquality)
transform(airquality, Month = factor(Month))
View(airquality)
View(transform(airquality, Month = factor(Month)))
transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = 'Month', ylab = 'Ozone (ppb)')
airquality
transform(airquality, Month = factor(Month))
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# caso queira fazer ajustes em dos parametros, temos a funcao par()
?par
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/7.Manipulacao-de-Dados-com-R")
getwd()
# Carregando pacotes
library(rvest)              # utilizado para fazer a extração de informações de páginas da web
library(stringr)            # fornece funções para manipulação de strings de texto de forma eficiente
library(dplyr)              # fornece um conjunto de funções que permitem filtrar, transformar, resumir e combinar dados
library(lubridate)          # permite realizar operações comuns em datas
library(readr)              # conjunto de funções rápidas e eficientes para importar e ler dados tabulares em R
gc()
webpage <- read_html('<html>  <head>   <title>Página de Notícias</title>  </head>  <body>   <div class="post">    <h2 class="title">Título da Postagem 1</h2>    <span class="date">01/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 1...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 2</h2>    <span class="date">02/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 2...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 3</h2>    <span class="date">03/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 3...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 4</h2>    <span class="date">04/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 4...</p>    </div>   </div>  </body></html>')
webpage
results <-
webpage %>%
html_nodes('.post')
restuls
results
records <- vector("list", length = length(results))
for(i in seq_along(results)){
titulo <-
results[i] %>%
html_nodes('.title') %>%
html_text(trim = TRUE)
data <-
results[i] %>%
html_nodes('date') %>%
html_text(trim = TRUE)
conteudo <-
results[i] %>%
html_nodes('content') %>%
html_text(trim = TRUE)
records[[i]] <- data.frame(titulo = titulo, data = data, conteudo = conteudo)
}
webpage <- read_html('<html>  <head>   <title>Página de Notícias</title>  </head>  <body>   <div class="post">    <h2 class="title">Título da Postagem 1</h2>    <span class="date">01/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 1...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 2</h2>    <span class="date">02/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 2...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 3</h2>    <span class="date">03/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 3...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 4</h2>    <span class="date">04/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 4...</p>    </div>   </div>  </body></html>')
webpage
results <-
webpage %>%
html_nodes('.post')
results
records <- vector("list", length = length(results))
for(i in seq_along(results)){
titulo <-
results[i] %>%
html_nodes('.title') %>%
html_text(trim = TRUE)
data <-
results[i] %>%
html_nodes('date') %>%
html_text(trim = TRUE)
conteudo <-
results[i] %>%
html_nodes('content') %>%
html_text(trim = TRUE)
records[[i]] <- data.frame(titulo = titulo, data = data, conteudo = conteudo)
}
df <- bind_rows(records)
View(df)
webpage <- read_html('<html>  <head>   <title>Página de Notícias</title>  </head>  <body>   <div class="product">    <h2 class="title">Produto 1</h2>    <p class="description">Descrição do Produto 1</p>    <span class="price">R$ 100,00</span>   </div>   <div class="product">    <h2 class="title">Produto 2</h2>    <p class="description">Descrição do Produto 2</p>    <span class="price">R$ 50,00</span>   </div>   <div class="product">    <h2 class="title">Produto 3</h2>    <p class="description">Descrição do Produto 3</p>    <span class="price">R$ 75,00</span>   </div>   <div class="product">    <h2 class="title">Produto 4</h2>    <p class="description">Descrição do Produto 4</p>    <span class="price">R$ 175,99</span>   </div>  </body></html>')
results <-
webpage %>%
html_nodes(".product")
records <- vector("list", length = length(results))
for(i in seq_along(results)){
titulo <-
results[i] %>%
html_nodes('.title') %>%
html_text(trim = TRUE)
descricao <-
results[i] %>%
html_nodes('.description') %>%
html_text(trim = TRUE)
preco <-
results[i] %>%
html_nodes('.price') %>%
html_text(trim = TRUE) %>%
str_remove("R\\$ ") %>%
gsub(",", ".", .) %>%
as.numeric()
records[[i]] <- data.frame(titulo = titulo, descricao = descricao, preco = preco)
}
webpage <- read_html('<html>  <head>   <title>Página de Notícias</title>  </head>  <body>   <div class="post">    <h2 class="title">Título da Postagem 1</h2>    <span class="date">01/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 1...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 2</h2>    <span class="date">02/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 2...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 3</h2>    <span class="date">03/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 3...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 4</h2>    <span class="date">04/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 4...</p>    </div>   </div>  </body></html>')
webpage
results <-
webpage %>%
html_nodes('.post')
results
records <- vector("list", length = length(results))
records
}
for(i in seq_along(results)){
titulo <-
results[i] %>%
html_nodes('.title') %>%
html_text(trim = TRUE)
data <-
results[i] %>%
html_nodes('date') %>%
html_text(trim = TRUE)
conteudo <-
results[i] %>%
html_nodes('content') %>%
html_text(trim = TRUE)
records[[i]] <- data.frame(titulo = titulo, data = data, conteudo = conteudo)
}
for(i in seq_along(results)){
titulo <-
results[i] %>%
html_nodes('.title') %>%
html_text(trim = TRUE)
data <-
results[i] %>%
html_nodes('date') %>%
html_text(trim = TRUE)
conteudo <-
results[i] %>%
html_nodes('content') %>%
html_text(trim = TRUE)
print(conteudo)
}
for(i in seq_along(results)){
titulo <-
results[i] %>%
html_nodes('.title') %>%
html_text(trim = TRUE)
data <-
results[i] %>%
html_nodes('date') %>%
html_text(trim = TRUE)
conteudo <-
results[i] %>%
html_nodes('content') %>%
html_text(trim = TRUE)
print(data)
}
webpage <- read_html('<html>  <head>   <title>Página de Notícias</title>  </head>  <body>   <div class="product">    <h2 class="title">Produto 1</h2>    <p class="description">Descrição do Produto 1</p>    <span class="price">R$ 100,00</span>   </div>   <div class="product">    <h2 class="title">Produto 2</h2>    <p class="description">Descrição do Produto 2</p>    <span class="price">R$ 50,00</span>   </div>   <div class="product">    <h2 class="title">Produto 3</h2>    <p class="description">Descrição do Produto 3</p>    <span class="price">R$ 75,00</span>   </div>   <div class="product">    <h2 class="title">Produto 4</h2>    <p class="description">Descrição do Produto 4</p>    <span class="price">R$ 175,99</span>   </div>  </body></html>')
webpage
results <-
webpage %>%
html_nodes(".product")
records <- vector("list", length = length(results))
for(i in seq_along(results)){
titulo <-
results[i] %>%
html_nodes('.title') %>%
html_text(trim = TRUE)
descricao <-
results[i] %>%
html_nodes('.description') %>%
html_text(trim = TRUE)
preco <-
results[i] %>%
html_nodes('.price') %>%
html_text(trim = TRUE) %>%
str_remove("R\\$ ") %>%
gsub(",", ".", .) %>%
as.numeric()
print(titulo)
records[[i]] <- data.frame(titulo = titulo, descricao = descricao, preco = preco)
}
webpage <- read_html('<html>  <head>   <title>Página de Notícias</title>  </head>  <body>   <div class="post">    <h2 class="title">Título da Postagem 1</h2>    <span class="date">01/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 1...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 2</h2>    <span class="date">02/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 2...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 3</h2>    <span class="date">03/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 3...</p>    </div>   </div>   <div class="post">    <h2 class="title">Título da Postagem 4</h2>    <span class="date">04/01/2022</span>    <div class="content">     <p>Conteúdo da postagem 4...</p>    </div>   </div>  </body></html>')
results <-
webpage %>%
html_nodes('.post')
results
records <- vector("list", length = length(results))
for(i in seq_along(results)){
titulo <-
results[i] %>%
html_nodes('.title') %>%
html_text(trim = TRUE)
print(titulo)
data <-
results[i] %>%
html_nodes('date') %>%
html_text(trim = TRUE)
conteudo <-
results[i] %>%
html_nodes('content') %>%
html_text(trim = TRUE)
}
for(i in seq_along(results)){
titulo <-
results[i] %>%
html_nodes('.title') %>%
html_text(trim = TRUE)
data <-
results[i] %>%
html_nodes('.date') %>%
html_text(trim = TRUE)
conteudo <-
results[i] %>%
html_nodes('.content') %>%
html_text(trim = TRUE)
records[[i]] <- data.frame(titulo = titulo, data = data, conteudo = conteudo)
}
df <- bind_rows(records)
View(df)
summary(df)
df$data <- mdy(df$data)
summary(df)
webpage <- read_html('<html>  <head>   <title>Página de Notícias</title>  </head>  <body>   <ul class="members">    <li class="memberli">Usuário 1</li>    <li class="memberli">Usuário 2</li>    <li class="memberli">Usuário 3</li>   </ul>  </body></html>')
webpage
results <-
webpage %>%
html_nodes('.members')
results
records <- vector("list", length = length(results))
records
for(i in seq_along(results)){
usuario <-
results[i] %>%
html_nodes('.memberli') %>%
html_text(trim = TRUE)
print(usuario)
}
usuarios <-
results %>%
html_nodes('.memberli')
usuarios
usuarios <-
results %>%
html_nodes('.memberli') %>%
html_text(trim = TRUE)
usuarios
results <-
webpage %>%
html_nodes('.members') %>%
html_text(trim = TRUE)
results
usuarios <-
results %>%
html_nodes('.memberli') %>%
html_text(trim = TRUE)
usuarios
webpage <- read_html('<html>  <head>   <title>Página de Notícias</title>  </head>  <body>   <ul class="members">    <li class="memberli">Usuário 1</li>    <li class="memberli">Usuário 2</li>    <li class="memberli">Usuário 3</li>   </ul>  </body></html>')
webpage
results <-
webpage %>%
html_nodes('.members')
results
usuarios <-
results %>%
html_nodes('.memberli') %>%
html_text(trim = TRUE)
usuarios
df <- as.data.frame(usuarios)
View(df)
df <- as.data.frame(id = seq_along(usuarios), usuarios = usuarios)
webpage <- read_html('<html>  <head>   <title>Página de Notícias</title>  </head>  <body>   <ul class="members">    <li class="memberli">Usuário 1</li>    <li class="memberli">Usuário 2</li>    <li class="memberli">Usuário 3</li>   </ul>  </body></html>')
results <-
webpage %>%
html_nodes('.members')
usuarios <-
results %>%
html_nodes('.memberli') %>%
html_text(trim = TRUE)
df <- data.frame(id = seq_along(usuarios), usuarios = usuarios)
View(df)
gc()
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/7.Manipulacao-de-Dados-com-R")
getwd()
library(haven)
vendas <- read_sas("vendas.sas")
View(vendas)
summary(vendas)
library(ggplot2)
# Converter a variável "gender" em um fator
vendas$gender <- as.factor(vendas$gender)
summary(vendas)
# Criar o gráfico de barras usando ggplot
ggplot(vendas,
aes(x = gender))
# Criar o gráfico de barras usando ggplot
ggplot(vendas,
aes(x = gender)) +
geom_bar(fill = 'blue')
ggplot(vendas, aes(x = gender)) +
geom_bar(fill = 'blue') +
labs(title = "Distribuição de Clientes por Gênero",
x = "Gênero",
y = "Contagem")
library(dplyr)
media_idade_genero <-
vendas %>%
group_by(gender) %>%
summarise(media_idade <- mean(age))
View(media_idade_genero)
media_idade_genero <-
vendas %>%
group_by(gender) %>%
summarise(media_idade <- mean(age),
total_purchace <- sum(purchace))
media_idade_genero <-
vendas %>%
group_by(gender) %>%
summarise(media_idade <- mean(age),
total_purchase <- sum(purchase))
View(media_idade_genero)
media_idade_genero <-
vendas %>%
group_by(gender) %>%
summarise(media_idade = mean(age),
total_purchase = sum(purchase))
View(media_idade_genero)
summary(vendas)
vendas$income <- as.factor(vendas$income)
summary(vendas)
barplot_gender <-
ggplot(vendas, aes(x = gender)) +
geom_bar(fill = 'blue') +
labs(title = "Distribuição de Clientes por Gênero",
x = "Gênero",
y = "Contagem")
barplot_income <-
ggplot(vendas, aes(x = income)) +
geom_bar(fill = "green") +
labs(title = "Distribuição de Clientes por Renda",
x = "Renda",
y = "Contagem")
barplot_income
renda_genero <-
vendas %>%
group_by(gender, income)
View(renda_genero)
barplot_income_gender <- ggplot(vendas, aes(x = income, fill = gender)) +
geom_bar() +
labs(title = "Distribuição de Clientes por Renda e Gênero",
x = "Renda",
y = "Contagem") +
scale_fill_manual(values = c("blue", "pink"))  # Define as cores para os gêneros masculino e feminino
barplot_income_gender
renda_genero <-
vendas %>%
group_by(gender) %>%
summarise(total_income = sum(as.numeric(income)))
View(renda_genero)
vendas <- read_sas("vendas.sas")
View(vendas)
rendas_genero <- vendas %>%
filter(income == "low") %>%
count(gender)
View(rendas_genero)
renda_genero <-
vendas %>%
group_by(gender)
View(rendas_genero)
vendas <- read_sas("vendas.sas")
View(vendas)
class(vendas)
str(vendas)
summary(vendas)
# manipulando dados
media_idade_genero <-
vendas %>%
group_by(gender) %>%
summarise(media_idade = mean(age),
total_purchase = sum(purchase))
renda_genero <-
vendas %>%
group_by(gender)
View(media_idade_genero)
View(renda_genero)
renda_genero <-
vendas %>%
group_by(gender) %>%
count()
View(renda_genero)
renda_genero <-
vendas %>%
group_by(gender, income) %>%
count()
View(renda_genero)
renda_genero <-
vendas %>%
group_by(gender, income) %>%
summarise(total = n(income))
renda_genero <-
vendas %>%
group_by(gender, income) %>%
summarise(total = count(income))
renda_genero <-
vendas %>%
group_by(gender, income) %>%
count()
View(renda_genero)
scatterplot <-
ggplot(vendas, aes(x = age, y = income))
scatterplot
scatterplot <-
ggplot(vendas, aes(x = age, y = income)) +
geom_point()
scatterplot
scatterplot <-
ggplot(vendas, aes(x = age, y = income)) +
geom_point() +
labs(title = "Gráfico de Dispersão: Idade vs. Renda",
x = "Idade",
y = "Renda")
scatterplot
scatterplot
line_plot <- ggplot(vendas, aes(x = data, y = purchase)) +
geom_line() +
labs(title = "Gráfico de Linhas: Vendas ao Longo do Tempo",
x = "Data",
y = "Vendas")
line_plot
line_plot <- ggplot(vendas, aes(x = date, y = purchase)) +
geom_line() +
labs(title = "Gráfico de Linhas: Vendas ao Longo do Tempo",
x = "Data",
y = "Vendas")
line_plot
df_stata <- read_dta("mov.dta")
View(df_stata)
class(df_stata)
str(df_stata)
summary(df_stata)
barplot_income_gender
install.packages('foreign')
library('foreign')
florida <- read.dta("florida.dta")
View(florida)
dados <- read.spss("international.sav")
df <- data.frame(dados)
View(df)
# Criando um boxplot
boxplot(df$gdp)
# Coeficiente de Correlação. Indica uma associação negativa entre GDP e alfabetização feminina
cor(df$gdp, df$f_illit)
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/7.Manipulacao-de-Dados-com-R")
getwd()
install.packages("quantmod")
install.packages("xts")
library(moments)
install.packages("moments")
gc()
library(quantmod)
library(xts)
library(moments)
start_date <- as.Date("2018-01-21")
end_date <- as.Date("2018-06-21")
getSymbols("PETR4.SA", src = "yahoo", from = start_date, to = end_date, auto.assign = T)
saveRDS(PETR4.SA, file = "PETR4.SA.rds") # Salva os dados em formato binário
Ptr = readRDS("PETR4.SA.rds")
