plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 62,  cex.main = 1.5)
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 52,  cex.main = 2.5)
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 52,  cex.main = 1.5) # muda a cor e o tamanho do titulo
library(datasets)
hist(warpbreaks$breaks)
View(airquality)
View(airquality)
transform(airquality, Month = factor(Month))
View(airquality)
View(transform(airquality, Month = factor(Month)))
transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = 'Month', ylab = 'Ozone (ppb)')
airquality
transform(airquality, Month = factor(Month))
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# caso queira fazer ajustes em dos parametros, temos a funcao par()
?par
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/7.Projeto-BigDataNaPratica-Analise-de-Series-Temporais-no-Mercado-Financeiro")
getwd()
library(quantmod)
library(xts)
library(moments)
library(dplyr)
start_date <- as.Date("2018-01-21")
end_date <- as.Date("2018-06-21")
getSymbols("PETR4.SA", src = "yahoo", from = start_date, to = end_date, auto.assign = T)
class(PETR4.SA)
View(PETR4.SA)
PETR4.SA.Close <- PETR4.SA[, "PETR4.SA.Close"]    # filtrando apenas coluna .Close . Não dá para fazer com dplyr por causa da classe
View(PETR4.SA.Close)
candleChart(PETR4.SA)
candleChart(PETR4.SA.Close)
candleChart(PETR4.SA.Close)
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobrás",
col = 'red', xlab = 'Data', ylab = 'Preço',
major.ticks = 'months', minor.ticks = FALSE)                         # demarcações de datas
candleChart(PETR4.SA.Close)
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobrás",
col = 'red', xlab = 'Data', ylab = 'Preço',
major.ticks = 'months', minor.ticks = FALSE)                         # demarcações de datas
# Criando uma lista de valores
lista  <- c(5, 10, 15, 20, 25)
lista2 <- c(2, 3, 2, 4, 2, 2, 3, 2, 2)
# Calculando o desvio padrão
desvio_padrao <- sd(lista)
# Exibindo o valor do desvio padrão
desvio_padrao
desvio_padrao2 <- sd(lista2)
desvio_padrao2
mean(lista)
mean(lista2)
Criando uma lista de valores
# Criando uma lista de valores
lista  <- c(5, 10, 15, 20, 25)
lista2 <- c(2, 3, 2, 4, 2, 2, 3, 2, 2)
# Calculando o desvio padrão
desvio_padrao <- sd(lista)
desvio_padrao2 <- sd(lista2)
mean(lista2)
# Exibindo o valor do desvio padrão
desvio_padrao
desvio_padrao2
?sd
sd(lista3)
lista3 <- c(1, 2)
sd(lista3)
lista3 <- c(2, 2)
sd(lista3)
lista3 <- c(2, 3)
sd(lista3)
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobrás",
col = 'red', xlab = 'Data', ylab = 'Preço',
major.ticks = 'months', minor.ticks = FALSE)                         # demarcações de datas
addBBands(n = 20, sd = 2)
plot(lista2, main = "Lista 2",
col = 'red', xlab = 'Data', ylab = 'Preço',
major.ticks = 'months', minor.ticks = FALSE)                         # demarcações de datas
plot(lista2, main = "Lista 2",
col = 'red', xlab = 'Data', ylab = 'Preço')
addBBands(n = 20, sd = 2)
lista2 <- c(2, 3, 2, 4, 2, 2, 3, 2, 2)      # variação menor entre os valores
plot(lista2, main = "Lista 2",
col = 'red', xlab = 'Data', ylab = 'Preço')
addBBands(n = 20, sd = 2)
start_date <- as.Date("2018-01-21")
end_date <- as.Date("2018-06-21")
getSymbols("PETR4.SA", src = "yahoo", from = start_date, to = end_date, auto.assign = T)
PETR4.SA.Close <- PETR4.SA[, "PETR4.SA.Close"]    # filtrando apenas coluna .Close . Não dá para fazer com dplyr por causa da classe
candleChart(PETR4.SA)
candleChart(PETR4.SA.Close)
plot(PETR4.SA.Close, main = "Fechamento Diário Ações Petrobrás",
col = 'red', xlab = 'Data', ylab = 'Preço',
major.ticks = 'months', minor.ticks = FALSE)                         # demarcações de datas
addBBands(n = 20, sd = 2)
candleChart(PETR4.SA)
addBBands(n = 20, sd = 2)
addADX(n = 11, maType = "EMA")
PETR4.SA.logs_diarios <-
diff(log(PETR4.SA.Close), lag = 1)
View(PETR4.SA.logs_diarios)
which(is.na(PETR4.SA.logs_diarios)) # retorna o índice onde está o valor NA
PETR4.SA.logs_diarios <- PETR4.SA.logs_diarios[-1] # remove primeira linha
candleChart(PETR4.SA.Close)
addBBands(n = 20, sd = 2)
addADX(n = 11, maType = "EMA")
plot(PETR4.SA.logs_diarios, main = 'Fechamento Diário das Ações da Petrobrás',
col = 'red', xlab = 'Data', ylab = 'Retorno',
major.ticks = 'months', minor.ticks = FALSE)
candleChart(PETR4.SA.logs_diarios)
candleChart(PETR4.SA.Close)
candleChart(PETR4.SA.logs_diarios)
candleChart(PETR4.SA.Close)
candleChart(PETR4.SA.logs_diarios)
statNames <- c('Mean', 'Standard Deviation', 'Skewness', 'Kurtosis')
PETR4.SA.stats <- c(mean(PETR4.SA.logs_diarios), sd(PETR4.SA.logs_diarios),
skewness(PETR4.SA.logs_diarios), kurtosis(PETR4.SA.logs_diarios))
PETR4.SA.stats
names(PETR4.SA.stats) <- statNames
PETR4.SA.stats
# Configurando o diretório de trabalho
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/7.Manipulacao-de-Dados-com-R")
getwd()
library(rvest)
library(dplyr)
library(stringr)
library(tidyr)
gc()
library(rvest)     # é usado para extrair dados de páginas da web.
library(dplyr)     # manipulação de dados
library(stringr)   # manipulação de strings
library(tidyr)     # manipulação e organização de dados (separar e combinar colunas de dados)
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/7.Manipulacao-de-Dados-com-R")
getwd()
pagina <- read_html("http://forecast.weather.gov/MapClick.php?lat=42.31674913306716&lon=-71.42487878862437&site=all&smap=1#.VRsEpZPF84I")
pagina
results <-
pagina %>%
html_nodes("#detailed-forecast")
results
results <-
results %>%
html_nodes(".forecast-text") %>%
html_text(trim = TRUE)
results
dia_semana <-
results %>%
html_nodes(".forecast-label") %>%
html_text(trim = TRUE)
texto <-
results %>%
html_nodes(".forecast-text") %>%
html_text(trim = TRUE)
pagina <- read_html("http://forecast.weather.gov/MapClick.php?lat=42.31674913306716&lon=-71.42487878862437&site=all&smap=1#.VRsEpZPF84I")
results <-
pagina %>%
html_nodes("#detailed-forecast")
dia_semana <-
results %>%
html_nodes(".forecast-label") %>%
html_text(trim = TRUE)
texto <-
results %>%
html_nodes(".forecast-text") %>%
html_text(trim = TRUE)
dia_semana
df <- data.frame(id = dia_semana, previsao = texto)
View(df)
df <- data.frame(dia_semana = dia_semana, previsao = texto)
View(df)
row.names(df) <- df$dia_semana # transformando dia_semana em índice
View(df)
df <- df[, -1]  # Remover a coluna "dia_semana" do conjunto de dados
View(df)
df <- data.frame(dia_semana = dia_semana, previsao = texto)
library(tibble)
df <- data.frame(dia_semana = dia_semana, previsao = texto)
View(df)
df <- column_to_rownames(df, var = "dia_semana") # transforma coluna em índice
View(df)
webpage <- read_html("https://pt.wikipedia.org/wiki/Copa_do_Brasil_de_Futebol#Campeões")
webpage
tabelas <- html_table(webpage, fill = TRUE)
tabelas
tabela_campeoes <- tabelas[[7]]
tabela_campeoes
View(tabela_campeoes)
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
View(tabela_campeoes)
tabela_campeoes <- tabelas[[7]]
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
tabela_campeoes <- tabelas[[7]]
View(tabela_campeoes)
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
tabela_campeoes <- tabela_campeoes[-1, ]
View(tabela_campeoes)
View(tabela_campeoes)
colnames(tabela_campeoes)[colnames(tabela_campeoes) == "(vde)Ano"] <- "Ano"
View(tabela_campeoes)
webpage <- read_html("https://pt.wikipedia.org/wiki/Copa_do_Brasil_de_Futebol#Campeões")
tabelas <- html_table(webpage, fill = TRUE)                    #  [[7]] campeões [[12]] artilheiros
# extraindo
tabela_campeoes <- tabelas[[7]]
View(tabela_campeoes)
# transformando primeira linha em nome de coluna
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
# renomeando nome da coluna
colnames(tabela_campeoes)[colnames(tabela_campeoes) == "(vde)Ano"] <- "Ano"
# editando conteúdo da coluna "Ano"
tabela_campeoes$Ano <- gsub("Detalhes", "", tabela_campeoes$Ano)
str(tabela_campeoes)
summary(tabela_campeoes)
# convertendo coluna "Ano" para o tipo facotr
tabela_campeoes$Ano <- as.factor(tabela_campeoes$Ano)
summary(tabela_campeoes)
# excluindo primeira linha
tabela_campeoes <- tabela_campeoes[-1, ]
View(tabela_campeoes)
tabela_campeoes <- tabela_campeoes[-35, ]
View(tabela_campeoes)
View(tabela_campeoes)
tabela_campeoes <-
tabela_campeoes %>%
select(Ano, Campeão, Vice)
View(tabela_campeoes)
# extraindo
tabela_artilheiros <- tabelas[[12]]
View(tabela_artilheiros)
df_final <- data.frame(tabela_campeoes, tabela_artilheiros)
View(tabela_campeoes)
View(tabela_artilheiros)
df_final <- merge(tabela_campeoes, tabela_artilheiros, by = 'Ano')
View(df_final)
# Agrupar os dados por ano e combinar os artilheiros em uma única linha
df_aggregated <- aggregate(. ~ Ano, data = df_final, FUN = function(x) paste(x, collapse = ", "))
# Verificar o dataframe resultante
View(df_aggregated)
webpage <- read_html("https://pt.wikipedia.org/wiki/Copa_do_Brasil_de_Futebol#Campeões")
webpage
# extraindo todas as tabelas de webpage
tabelas <- html_table(webpage, fill = TRUE)                    #  [[7]] campeões [[12]] artilheiros
tabelas
# extraindo e editando tabela de campeões
# extraindo
tabela_campeoes <- tabelas[[7]]
# transformando primeira linha em nome de coluna
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
# renomeando nome da coluna
colnames(tabela_campeoes)[colnames(tabela_campeoes) == "(vde)Ano"] <- "Ano"
# editando conteúdo da coluna "Ano"
tabela_campeoes$Ano <- gsub("Detalhes", "", tabela_campeoes$Ano)
# convertendo coluna "Ano" para o tipo factor
tabela_campeoes$Ano <- as.factor(tabela_campeoes$Ano)
# excluindo primeira e última linha
tabela_campeoes <- tabela_campeoes[-1, ]
tabela_campeoes <- tabela_campeoes[-35, ]
# exibindo somente as colunas escolhidas
tabela_campeoes <-
tabela_campeoes %>%
select(Ano, Campeão, Vice)
View(tabela_campeoes)
# extraindo e editando tabela de artilharia
# extraindo
tabela_artilheiros <- tabelas[[12]]
View(tabela_artilheiros)
# Unindo os dois dataframes em um só de acordo com a coluna 'Ano"
df_juntos <- merge(tabela_campeoes, tabela_artilheiros, by = 'Ano')
View(df_final)
# Agrupar os dados por ano e combinar os artilheiros em uma única linha
df_final <- aggregate(. ~ Ano, data = df_juntos, FUN = function(x) paste(x, collapse = ", "))
View(df_final)
df_final <- df_final %>%
separate(Gols, into = c("Gols", "Outros"), sep = ",", extra = "drop") %>%
select(-Outros)
# Verificar o dataframe resultante
View(df_final)
webpage <- read_html("https://pt.wikipedia.org/wiki/Copa_do_Brasil_de_Futebol#Campeões")
tabelas <- html_table(webpage, fill = TRUE)                    #  [[7]] campeões [[12]] artilheiros
# extraindo
tabela_campeoes <- tabelas[[7]]
# transformando primeira linha em nome de coluna
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
# renomeando nome da coluna
colnames(tabela_campeoes)[colnames(tabela_campeoes) == "(vde)Ano"] <- "Ano"
# editando conteúdo da coluna "Ano"
tabela_campeoes$Ano <- gsub("Detalhes", "", tabela_campeoes$Ano)
# convertendo coluna "Ano" para o tipo factor
tabela_campeoes$Ano <- as.factor(tabela_campeoes$Ano)
tabela_campeoes <- tabela_campeoes[-1, ]
tabela_campeoes <- tabela_campeoes[-35, ]
tabela_campeoes <-
tabela_campeoes %>%
select(Ano, Campeão, Vice)
View(tabela_campeoes)
tabela_artilheiros <- tabelas[[12]]
View(tabela_artilheiros)
df_juntos <- merge(tabela_campeoes, tabela_artilheiros, by = 'Ano')
View(df_final)
View(df_juntos)
df_final <- aggregate(. ~ Ano, data = df_juntos, FUN = function(x) paste(x, collapse = ", "))
View(df_final)
df_final <-
df_final %>%
separate(Campeão, into = c("Campeão", "Outros_Campeão"), sep = ",", extra = "drop") %>%
select(-Outros_Campeão)
df_final <-
df_final %>%
separate(Vice, into = c("Vice", "Outros_Vice"), sep = ",", extra = "drop") %>%
select(-Outros_Vice)
df_final <- df_final %>%
separate(Gols, into = c("Gols", "Outros_Gols"), sep = ",", extra = "drop") %>%
select(-Outros_Gols)
View(df_final)
tabela_campeoes$Ano <- as.factor(tabela_campeoes$Ano)
tabela_campeoes$Campeão <- as.factor(tabela_campeoes$Campeão)
tabela_campeoes$Vice <- as.factor(tabela_campeoes$Vice)
webpage <- read_html("https://pt.wikipedia.org/wiki/Copa_do_Brasil_de_Futebol#Campeões")
tabelas <- html_table(webpage, fill = TRUE)                    #  [[7]] campeões [[12]] artilheiros
# extraindo
tabela_campeoes <- tabelas[[7]]
# transformando primeira linha em nome de coluna
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
# renomeando nome da coluna
colnames(tabela_campeoes)[colnames(tabela_campeoes) == "(vde)Ano"] <- "Ano"
# editando conteúdo da coluna "Ano"
tabela_campeoes$Ano <- gsub("Detalhes", "", tabela_campeoes$Ano)
tabela_campeoes$Ano <- as.factor(tabela_campeoes$Ano)
tabela_campeoes$Campeão <- as.factor(tabela_campeoes$Campeão)
tabela_campeoes$Vice <- as.factor(tabela_campeoes$Vice)
summary(tabela_campeoes)
tabela_campeoes <- tabela_campeoes[-1, ]
tabela_campeoes <- tabela_campeoes[-35, ]
# exibindo somente as colunas escolhidas
tabela_campeoes <-
tabela_campeoes %>%
select(Ano, Campeão, Vice)
View(tabela_campeoes)
# extraindo
tabela_artilheiros <- tabelas[[12]]
df_juntos <- merge(tabela_campeoes, tabela_artilheiros, by = 'Ano')
df_final <- aggregate(. ~ Ano, data = df_juntos, FUN = function(x) paste(x, collapse = ", "))
df_final <-
df_final %>%
separate(Campeão, into = c("Campeão", "Outros_Campeão"), sep = ",", extra = "drop") %>%
select(-Outros_Campeão)
df_final <-
df_final %>%
separate(Vice, into = c("Vice", "Outros_Vice"), sep = ",", extra = "drop") %>%
select(-Outros_Vice)
df_final <- df_final %>%
separate(Gols, into = c("Gols", "Outros_Gols"), sep = ",", extra = "drop") %>%
select(-Outros_Gols)
View(df_final)
summary(df_final)
webpage <- read_html("https://pt.wikipedia.org/wiki/Copa_do_Brasil_de_Futebol#Campeões")
tabelas <- html_table(webpage, fill = TRUE)                    #  [[7]] campeões [[12]] artilheiros
# extraindo
tabela_campeoes <- tabelas[[7]]
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
# renomeando nome da coluna
colnames(tabela_campeoes)[colnames(tabela_campeoes) == "(vde)Ano"] <- "Ano"
# editando conteúdo da coluna "Ano"
tabela_campeoes$Ano <- gsub("Detalhes", "", tabela_campeoes$Ano)
# convertendo coluna "Anos" para o tipo factor
tabela_campeoes$Ano <- as.factor(tabela_campeoes$Ano)
summary(tabela_campeoes)
# excluindo primeira e última linha
tabela_campeoes <- tabela_campeoes[-1, ]
tabela_campeoes <- tabela_campeoes[-35, ]
# exibindo somente as colunas escolhidas
tabela_campeoes <-
tabela_campeoes %>%
select(Ano, Campeão, Vice)
# extraindo
tabela_artilheiros <- tabelas[[12]]
df_juntos <- merge(tabela_campeoes, tabela_artilheiros, by = 'Ano')
df_final <- aggregate(. ~ Ano, data = df_juntos, FUN = function(x) paste(x, collapse = ", "))
df_final <-
df_final %>%
separate(Campeão, into = c("Campeão", "Outros_Campeão"), sep = ",", extra = "drop") %>%
select(-Outros_Campeão)
df_final <-
df_final %>%
separate(Vice, into = c("Vice", "Outros_Vice"), sep = ",", extra = "drop") %>%
select(-Outros_Vice)
df_final <- df_final %>%
separate(Gols, into = c("Gols", "Outros_Gols"), sep = ",", extra = "drop") %>%
select(-Outros_Gols)
View(df_final)
summary(df_final)
df_final$Campeão <- as.factor(df_final$Campeão)
df_final$Vice <- as.factor(df_final$Vice)
summary(df_final)
View(df_final)
colnames(tabela_campeoes)["(vde)Ano"] <- "Anoasda"
View(tabela_campeoes)
colnames(tabela_campeoes)["Ano"] <- "Anoasda"
View(tabela_campeoes)
webpage <- read_html("https://pt.wikipedia.org/wiki/Copa_do_Brasil_de_Futebol#Campeões")
tabelas <- html_table(webpage, fill = TRUE)                    #  [[7]] campeões [[12]] artilheiros
# extraindo
tabela_campeoes <- tabelas[[7]]
# transformando primeira linha em nome de coluna
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
# renomeando nome da coluna
colnames(tabela_campeoes)["(vde)Ano"] <- "Ano"
tabela_campeoes$Ano <- gsub("Detalhes", "", tabela_campeoes$Ano)
# extraindo
tabela_campeoes <- tabelas[[7]]
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
# renomeando nome da coluna
colnames(tabela_campeoes)[colnames(tabela_campeoes) == "(vde)Ano"] <- "Ano"
# editando conteúdo da coluna "Ano"
tabela_campeoes$Ano <- gsub("Detalhes", "", tabela_campeoes$Ano)
# convertendo coluna "Anos" para o tipo factor
tabela_campeoes$Ano <- as.factor(tabela_campeoes$Ano)
summary(tabela_campeoes)
# excluindo primeira e última linha
tabela_campeoes <- tabela_campeoes[-1, ]
tabela_campeoes <- tabela_campeoes[-35, ]
# exibindo somente as colunas escolhidas
tabela_campeoes <-
tabela_campeoes %>%
select(Ano, Campeão, Vice)
View(tabela_campeoes)
# extraindo
tabela_artilheiros <- tabelas[[12]]
df_juntos <- merge(tabela_campeoes, tabela_artilheiros, by = 'Ano')
View(df_juntos)
# Agrupar os dados por ano e combinar os artilheiros em uma única linha
df_final <- aggregate(. ~ Ano, data = df_juntos, FUN = function(x) paste(x, collapse = ", "))
View(df_final)
# Editando colunas Campeão, Vice e Gols para ter somente o primeiro valor
df_final <-
df_final %>%
separate(Campeão, into = c("Campeão", "Outros_Campeão"), sep = ",", extra = "drop") %>%
select(-Outros_Campeão)
df_final <-
df_final %>%
separate(Vice, into = c("Vice", "Outros_Vice"), sep = ",", extra = "drop") %>%
select(-Outros_Vice)
df_final <- df_final %>%
separate(Gols, into = c("Gols", "Outros_Gols"), sep = ",", extra = "drop") %>%
select(-Outros_Gols)
# Convertendo colunas para o tipo factor
df_final$Campeão <- as.factor(df_final$Campeão)
df_final$Vice <- as.factor(df_final$Vice)
summary(df_final)
View(df_final)
View(df_juntos)
df_juntos <- left_join(tabela_campeoes, tabela_artilheiros, by = "Ano")
# extraindo
tabela_campeoes <- tabelas[[7]]
# transformando primeira linha em nome de coluna
colnames(tabela_campeoes) <- tabela_campeoes[1, ]
# renomeando nome da coluna
colnames(tabela_campeoes)[colnames(tabela_campeoes) == "(vde)Ano"] <- "Ano"
# editando conteúdo da coluna "Ano"
tabela_campeoes$Ano <- gsub("Detalhes", "", tabela_campeoes$Ano)
tabela_campeoes <- tabela_campeoes[-1, ]
tabela_campeoes <- tabela_campeoes[-35, ]
# exibindo somente as colunas escolhidas
tabela_campeoes <-
tabela_campeoes %>%
select(Ano, Campeão, Vice)
summary(tabela_campeoes)
df_juntos <- left_join(tabela_campeoes, tabela_artilheiros, by = "Ano")
# convertendo coluna "Anos" para o tipo factor
tabela_campeoes$Ano <- as.factor(tabela_campeoes$Ano)
# convertendo coluna "Anos" para o tipo factor
tabela_artilheiros$Ano <- as.factor(tabela_artilheiros$Ano)
df_juntos <- left_join(tabela_campeoes, tabela_artilheiros, by = "Ano")
View(df_juntos)
df_juntos <- merge(tabela_campeoes, tabela_artilheiros, by = 'Ano')
