group_by(continent) %>%
summarize(max_lifeExp_continent = max(lifeExp),
min_lifeExp_continent = min(lifeExp))
df_gm_dplyr <- gapminder %>%
group_by(continent) %>%
summarize(max_lifeExp_continent = max(lifeExp),
min_lifeExp_continent = min(lifeExp))
View(df_gm_dplyr)
df_gm4 <- ddply(gapminder,
~ continent,
function(x) c(n_uniq_countries = length(unique(country)))                )
df_gm4 <- ddply(gapminder,
~ continent,
function(x) c(n_uniq_countries = length(unique(x$country))))
View(df_gm4)
library(ggplot2)
str(mpg)
subset_mpg <- mpg[, c(1,7:9)]
View(subset_mpg)
subset_mpg <- mpg[, c(1, 7:9)] # selecionar todas as linhas e apenas as colunas 1, 7, 8 e 9 do dataframe mpg.
data(mpg)
df_mpg <- ddply(subset_mpg,
.(manufacturer),
summarize,
mean_cty = mean(cty))
View(df_mpg)
df_mpg2 <- ddply(subset_mpg,
~ manufacturer,
summarize,
mean_cty = mean(cty))
df_mpg2 <- ddply(subset_mpg,
~ manufacturer,
summarize,
mean_cty = mean(cty),
sd_cty = sd(cty),
mean_hwy = mean(hwy))
data(mpg) # carrega mpg
subset_mpg <- mpg[, c(1, 7:9)] # selecionar todas as linhas e apenas as colunas 1, 7, 8 e 9 do dataframe mpg.
df_mpg <- ddply(subset_mpg,              # média da coluna cty utilizando manufacturer como agrupamento
~ manufacturer,
summarize,
mean_cty = mean(cty))
df_mpg2 <- ddply(subset_mpg,
~ manufacturer,
summarize,
mean_cty = mean(cty),
sd_cty = sd(cty),
mean_hwy = mean(hwy))
View(df_mpg2)
df_mpg2 <- ddply(subset_mpg,
~ manufacturer,
summarize,
mean_cty = mean(cty),
sd_cty = sd(cty),
max_hwy = max(hwy))
View(df_mpg2)
df_mpg3 <- ddply(subset_mpg,
.(manufacturer, drv),
summarize,
mean_cty = mean(cty),
mean_hwy = mean(hwy))
View(df_mpg3)
df_mpg3_dplyr <- subset_mpg %>%
group_by(manufacturer, drv) %>%
summarize(mean_cty = mean(cty),
mean_hwy = mean(hwy))
View(df_mpg3_dplyr)
df_mpg3_dplyr <- subset_mpg %>%
groups(manufacturer, drv) %>%
summarize(mean_cty = mean(cty),
mean_hwy = mean(hwy))
df_mpg3_dplyr <- subset_mpg %>%
group_by(manufacturer, drv) %>%
summarize(mean_cty = mean(cty),
mean_hwy = mean(hwy),
.groups = 'drop')
View(df_mpg3_dplyr)
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/7.Manipulacao-de-Dados-com-R")
getwd()
library(plyr)
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/7.Manipulacao-de-Dados-com-R")
getwd()
# Instalando e carregando pacotes
library(plyr)
gc()
vendas <- data.frame(
regiao = sample(c("Norte", "Sul", "Leste", "Oeste"), size = 500, replace = TRUE),
produto = sample(c("A", "B", "C"), size = 500, replace = TRUE),
quantidade = sample(1:100, size = 500, replace = TRUE),
valor = sample(50:200, size = 500, replace = TRUE)
)
View(vendas)
library(dplyr)
vendas_regiao <-
vendas %>%
group_by(regiao) %>%
summarise(
qtd_regiao = sum(quantidade),
total_regiao = sum(valor))
View(vendas_regiao)
vendas_regiao2 <-
vendas %>%
group_by(regiao) %>%
summarise(
qtd_regiao = sum(quantidade),
total_regiao = sum(valor))
vendas_regiao <- ddply(vendas,
~ regiao,
summarise,
qtd_regiao = sum(quantidade),
total_regiao = sum(valor))
View(vendas_regiao)
alunos <- data.frame(
aluno = rep(paste0("Aluno", 1:500), each = 3),
disciplina = rep(c("Matemática", "Português", "História"), times = 500),
nota = round(rnorm(1500, 7, 2), 2)
)
View(aunos)
View(alunos)
media_por_aluno <- ddply(alunos,
~ aluno,
summarise,
media = mean(nota))
View(media_por_aluno)
funcionarios <- data.frame(
funcionario = rep(paste0("Funcionario", 1:500), each = 3),
departamento = rep(c("Vendas", "RH", "Financeiro"), times = 500),
salario = round(rnorm(1500, 5000, 1000), 2)
)
View(funcionarios)
head(funcionarios)
salario_medio <- ddply(funcionarios,
~ funcionario,
summarise,
media_salarial = mean(salario))
head(salario_medio)
salario_medio <- ddply(funcionarios,
~ departamento,
summarise,
media_salarial_departamento = mean(salario))
head(salario_medio)
estoque <- data.frame(
loja = rep(paste0("Loja", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE)
)
View(estoque)
head(estoque)
qtd_produto <- ddply(estoque,
~ produto,
summarise,
qtd_total = sum(quantidade))
View(qtd_produto)
qtd_produto <- ddply(estoque,
.(loja, produto),
summarise,
qtd_total = sum(quantidade))
View(qtd_produto)
estoque <- data.frame(
loja = rep(paste0("Loja", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE)
)
head(estoque)
# Utilize a função ddply para calcular a quantidade total de cada produto em todas as lojas.
qtd_produto <- ddply(estoque,
.(loja, produto),
summarise,
qtd_total = sum(quantidade))
View(estoque)
qtd_produto <- ddply(estoque,
~ loja,
summarise,
qtd_total = sum(quantidade))
View(qtd_produto)
qtd_produto <- ddply(estoque,
.(loja, produto),
summarise,
qtd_total = sum(quantidade))
qtd_produto <- ddply(estoque,
.(produto),
summarise,
qtd_total = sum(quantidade))
View(qtd_produto)
vendas <- data.frame(
regiao = sample(c("Norte", "Sul", "Leste", "Oeste"), size = 600, replace = TRUE),
produto = sample(c("A", "B", "C"), size = 600, replace = TRUE),
quantidade = sample(1:100, size = 600, replace = TRUE),
valor = sample(50:200, size = 600, replace = TRUE)
)
head(vendas)
media_qtd_venda <- ddply(vendas,
.(regiao, produto),
summarise,
media_qtd = mean(quantidade),
media_total = mean(valor))
media_qtd_venda
alunos <- data.frame(
aluno = rep(paste0("Aluno", 1:500), each = 3),
disciplina = rep(c("Matemática", "Português", "História"), times = 500),
nota = round(rnorm(1500, 7, 2), 2)
)
head(alunos)
View(alunos)
View(alunos)
media_por_aluno <- ddply(alunos,
.(aluno, disciplina),
summarise,
media_do_aluno = mean(nota))
View(media_por_aluno)
media_por_aluno <- ddply(alunos,
.(disciplina),
summarise,
media_do_aluno = mean(nota))
View(media_por_aluno)
media_por_aluno <- ddply(alunos,
.(aluno),
summarise,
media_do_aluno = mean(nota))
View(media_por_aluno)
media_notas_acima <- media_por_aluno %>%
filter(nota >= 7)
View(media_por_aluno)
head(media_por_aluno)
media_notas_acima <- media_por_aluno %>%
filter(media_do_aluno >= 7)
View(media_notas_acima)
View(media_por_aluno)
# Calcula a média das notas de cada aluno em cada disciplina
Zmedia_por_aluno <- ddply(alunos, .(aluno, disciplina), summarise, media_nota = mean(nota))
View(Zmedia_por_aluno)
# Calcula a média geral das notas
Zmedia_geral <- mean(alunos$nota)
# Filtra apenas os alunos com notas acima da média geral
Zalunos_notas_acima <- subset(media_por_aluno, media_nota > media_geral)
# Filtra apenas os alunos com notas acima da média geral
Zalunos_notas_acima <- subset(media_por_aluno, media_geral > media_geral)
View(alunos)
n_linhas <- 300
alunos <- data.frame(
aluno = rep(paste0("Aluno", 1:(n_linhas/3)), each = 3),
disciplina = rep(c("Matemática", "Português", "História"), times = n_linhas/3),
nota = round(rnorm(n_linhas, 7, 2), 2)
)
View(alunos)
n_linhas <- 300
alunos <- data.frame(
aluno = rep(paste0("Aluno", 1:(n_linhas/3)), each = 9),
disciplina = rep(c("Matemática", "Português", "História"), each = 3, times = n_linhas/3),
nota = round(rnorm(n_linhas, 7, 2), 2)
)
View(alunos)
media_por_aluno <- ddply(alunos,
.(aluno, disciplina),
summarise,
media_do_aluno = mean(nota))
head(media_por_aluno)
View(alunos)
media_notas_acima <- media_por_aluno %>%
filter(media_do_aluno >= 7)
View(media_notas_acima)
media_notas_acima2 <- media_por_aluno %>%
group_by(aluno) %>%
summarize(media_do_aluno = mean(ifelse(media_do_aluno >= 7, nota, NA), na.rm = TRUE))
media_notas_acima2 <- media_por_aluno %>%
group_by(aluno) %>%
summarize(media_do_aluno = mean(ifelse(media_do_aluno >= 7, nota, NA), na.rm = TRUE))
media_notas_acima2 <- media_por_aluno %>%
group_by(aluno) %>%
summarize(media_do_aluno = mean(ifelse(media_do_aluno >= 7, NA), na.rm = TRUE))
media_notas_acima2 <- media_por_aluno %>%
group_by(aluno) %>%
summarize(media_do_aluno = mean(ifelse(media_do_aluno >= 7, media_do_aluno, NA), na.rm = TRUE))
View(media_notas_acima2)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
head(clientes)
View(clientes)
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
head(df_clientes)
total_por_produto <- ddply(df_clientes,
.(cliente, produto),
summarise,
total_cliente_produto = sum(total))
View(total_por_produto)
View(df_clientes)
novo_registro <- data.frame(
cliente = "NovoCliente",
produto = "A",
quantidade = 2,
valor_unitario = 20.00
)
clientes <- rbind(clientes, novo_registro)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
novo_registro <- data.frame(
cliente = "NovoCliente",
produto = "A",
quantidade = 2,
valor_unitario = 20.00
)
clientes <- rbind(clientes, novo_registro)
View(clientes)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
novo_registro <- data.frame(
cliente = "Cliente1",
produto = "A",
quantidade = 2,
valor_unitario = 20.00
)
clientes <- rbind(clientes, novo_registro)
View(clientes)
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
head(df_clientes)
View(df_clientes)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
total_por_produto <- ddply(df_clientes,
.(cliente, produto),
summarise,
total_cliente_produto = sum(total))
View(total_por_produto)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
novo_registro <- data.frame(
cliente = "Cliente1",
produto = "A",
quantidade = 2,
valor_unitario = 20.00
)
clientes <- rbind(clientes, novo_registro)
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
total_por_produto2 <- ddply(df_clientes,
.(cliente, produto),
summarise,
total_cliente_produto = sum(total))
View(total_por_produto2)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
total_por_produto <- ddply(df_clientes,
.(cliente, produto),
summarise,
total_cliente_produto = sum(total))
View(total_por_produto)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
novo_registro <- data.frame(
cliente = "Cliente1",
produto = "A",
quantidade = 2,
valor_unitario = 20.00
)
clientes <- rbind(clientes, novo_registro)
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
View(df_clientes)
total_por_produto2 <- ddply(df_clientes,
.(cliente, produto),
summarise,
total_cliente_produto = sum(total))
View(total_por_produto2)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
total_por_produto <- ddply(df_clientes,
.(cliente, produto),
summarise,
total_cliente_produto = sum(total))
View(total_por_produto)
View(df_clientes)
set.seed(123)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
total_por_produto <- ddply(df_clientes,
.(cliente, produto),
summarise,
total_cliente_produto = sum(total))
novo_registro <- data.frame(
cliente = "Cliente1",
produto = "A",
quantidade = 2,
valor_unitario = 20.00
)
clientes <- rbind(clientes, novo_registro)
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
total_por_produto2 <- ddply(df_clientes,
.(cliente, produto),
summarise,
total_cliente_produto = sum(total))
View(df_clientes)
View(total_por_produto)
View(total_por_produto2)
set.seed(123)
clientes <- data.frame(
cliente = rep(paste0("Cliente", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE),
valor_unitario = round(runif(2000, 10, 50), 2)
)
novo_registro <- data.frame(cliente = "Cliente1", produto = "A", quantidade = 2, valor_unitario = 20.00)
clientes <- rbind(clientes, novo_registro)
head(clientes)
View(clientes)
# Utilize a função ddply para calcular o total gasto por cada cliente em cada produto, considerando o valor unitário e a
# quantidade comprada.
df_clientes <-
clientes %>%
mutate(total = quantidade * valor_unitario)
head(df_clientes)
total_por_produto <- ddply(df_clientes,
.(cliente, produto),
summarise,
total_cliente_produto = sum(total))
View(total_por_produto)
View(clientes)
View(df_clientes)
set.seed(123)
estoque <- data.frame(
loja = rep(paste0("Loja", 1:500), each = 4),
produto = rep(c("A", "B", "C", "D"), times = 500),
quantidade = sample(1:100, size = 2000, replace = TRUE)
)
head(estoque)
View(estoque)
View(estoque)
media_geral_estoque <- mean(estoque$quantidade)
media_geral_estoque
View(estoque)
media_produto <- ddply(estoque,
.(produto),
summarise,
media_prod = mean(quantidade))
View(media_produto)
media_produto <- ddply(estoque,
.(loja, produto),
summarise,
media_prod = mean(quantidade))
View(media_produto)
df_estoque <-
media_produto %>%
filter(quantidade > media_geral_estoque)
View(media_produto)
df_estoque <-
media_produto %>%
filter(media_prod > media_geral_estoque)
View(df_estoque)
media_geral_estoque <- mean(estoque$quantidade)
media_produto <- ddply(estoque,
.(produto),
summarise,
media_prod = mean(quantidade))
View(media_produto)
df_estoque <- media_produto %>%
filter(media_prod > media_geral_estoque)
View(df_estoque)
