altura <- c(145, 167, 176, 123, 150)
largura <- c(51, 63, 64, 40, 55)
plot(altura, largura)
?lynx
?lynx
View(lynx)
lynx
data(lynx)
View(lynx)
plot(lynx)
head(lynx)
View(head(lynx))
View(iris)
?lynx
head(lynx)
plot(lynx)
str(lynx)
names(lynx)
colnames(lynx)
plot(iris)
plot(lynx)
View(lynx)
?lynx # dataframe "lynx" contém duas colunas: "Year" (ano) e "trappings" (armadilhas), com 114 observações para cada variável
plot(lynx)
plot(lynx, ylab = 'Plots com Dataframes', xlab = '')
plot(lynx)
plot(lynx, ylab = 'Plots com Dataframes', xlab = '')
plot(lynx, ylab = 'Plots com Dataframes', xlab = 'Observações')
plot(lynx, main = 'Plots com Dataframes')
plot(lynx, main = 'Plots com Dataframes', col = 'red')
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 52,  cex.main = 1.5)
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 62,  cex.main = 1.5)
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 52,  cex.main = 2.5)
plot(lynx, main = 'Plots com Dataframes', col = 'red', col.main = 52,  cex.main = 1.5) # muda a cor e o tamanho do titulo
library(datasets)
hist(warpbreaks$breaks)
View(airquality)
View(airquality)
transform(airquality, Month = factor(Month))
View(airquality)
View(transform(airquality, Month = factor(Month)))
transform(airquality, Month = factor(Month))
boxplot(Ozone ~ Month, airquality, xlab = 'Month', ylab = 'Ozone (ppb)')
airquality
transform(airquality, Month = factor(Month))
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
#
# caso queira fazer ajustes em dos parametros, temos a funcao par()
?par
gc()
setwd("C:/Users/Julia/Desktop/CienciaDeDados/1.Big-Data-Analytics-com-R-e-Microsoft-Azure-Machine-Learning/7.Manipulacao-de-Dados-com-R")
getwd()
install.packages("data.table")
library(data.table)
library(plyr)
library(dplyr)
vec1 <- c(1, 2, 3, 4)
vec2 <- c('Vermelho', 'verde', 'Azul', 'Laranja')
dt1 <- data.table(vec1, vec2)
dt1
View(dt1)
class(dt1)
dt2 <- data.table(A = 1:9, B = c('Z', 'W', 'Q'), C = rnorm(9), D = TRUE)
dt2
dt2_sl1 <- dt[3:5, ]
dt2_sl1 <- dt2[3:5, ]
dt2_sl1
dt2_sl2 <- dt2[, .(B, C)]
dt2_sl2
dt3 <- data.table(B = c('a', 'b', 'c', 'd', 'e', 'a', 'b', 'c', 'd', 'e'),
val = as.integer(c(6:10, 1:5)))
dt3
dt2_funcao1 <- dt2[, .(Total = sum(A), Mean = mean(C))]
dt2_funcao1
dt2
dt2_funcao1
dt2_funcao1 <- dt2[, .(Total_Col_A = sum(A), Mean_Col_C = mean(C))]
dt2_funcao1
dt2_funcao2 <- dt2[, plot(A, C)]
dt2_funcao3 <- [, .(MySum_Col_A = sum(A)), by = .(Grp = A%%2)]
dt2_funcao3 <- dt2[, .(MySum_Col_A = sum(A)), by = .(Grp = A%%2)]
dt2_funcao3
dt4
dt4 <- data.table(A = rep(letters[2:1], each = 4L),
B = rep(1:4, each = 2L),
C = sample(8))
dt4
dt4_op1 <- dt4[, sum(C), by = A]
dt4_op1
dt4_op1_2 <- dt4_op1[order(A)]
dt4_op1_2
dt4_op2 <- dt4_op1[order(A)]
dt4_op2
dt4_op3 <- dt4[, sum(B), by = A][order(A)]
dt4_op3
dt_iris <- as.data.table(iris)
dt_iris <- as.data.table(iris)
dt_iris
dt_iris2 <- dt_iris[, .(Sepal.Length = median(Sepal.Length),
Sepal.Width = median(Sepal.Width),
Petal.Length = median(Petal.Length),
Petal.Width = median(Petal.Width)),
by = Species]
dt_iris2
dt_iris_dplyr <- dt_iris %>%
group_by(Species) %>%
summarise(Sepal.Length = median(Sepal.Length),
Sepal.Width = median(Sepal.Width),
Petal.Length = median(Petal.Length),
Petal.Width = median(Petal.Width))
dt_iris_dplyr
dt_iris3 <- dt_iris2[, lapply(.SD, median), by = Species]
dt_iris3
dt_iris3 <- dt_iris[, lapply(.SD, median), by = Species]
dt_iris3
dt4_op3
dt4 <- data.table(A = rep(letters[2:1], each = 4L),
B = rep(1:4, each = 2L),
C = sample(8))
dt4
dt4_op1 <- dt4[, sum(C), by = A]
dt4_op1
dt4_op2 <- dt4_op1[order(A)]
dt4_op2
dt4_op3 <- dt4[, sum(B), by = A][order(A)]
dt4_op3
x <- c('A', 'E', 'D', 'B', 'C')
gc()
x <- c('A', 'E', 'D', 'B', 'C')
x[]
x
x[c(1, 3)]
x[c(1, 1)]
x[c(1)]
x[c(1, 1)]
x[order[x]]
x[order([x])]
x[order(x)]
x[-c(1, 3)]
x[-c(1, 4)]   # "E" "B" "C"
# Vetor Lógico para gerar subsetting
x[c(TRUE, FALSE)]
x[c(TRUE, FALSE, TRUE, FALSE)]
y <- setNames(x, letteres[1:4])
y <- setNames(x, letters[1:4])
y
y <- setNames(x, letters[1:5])
y
y <- setNames(x, letters[1:4])
y
y[c('d', 'c', 'a')]
y[c('d', 'a', 'a')]   # "B" "A" "A"
mat <- matrix(1:9, nrow = 3)
colnames(mat) <- c('A', 'B', 'C')
mat
mat[1:2, ]
mat[1:2, 2:3]
vals <- outer(1:5, 1:5, FUN = "paste", sep = ',')
vals
vals[c(4, 15)]
df <- data.frame(x = 1:3, y = 3:1. z = letters[1:3])
df
df <- data.frame(x = 1:3, y = 3:1, z = letters[1:3])
df
df$z <- NULL
df
df$x
df <- data.frame(x = 1:3, y = 3:1, z = letters[1:3])
df
df$x
df[df$x == 2, ]
df
df[c(1, 3), ]
df[df$x == 2, ]  # retorna apenas coluna x com elemento = a 2 e todas as colunas
df[c(1, 3), ]    # retorna as linhas 1 e 3 e todas as colunas
df[c('x', 'z')]
df
df[c('x', 'z')]  # retorna
df[, c('x', 'z')]
str(df["x"])
str(df[, "x"])
df <- data.frame(x = 1:3, y = 3:1, z = letters[1:3])
df$z <- NULL
df
a <- list(x = 1:3, y = 4:5)
a
a[1]
a[[1]]
a[[1]][[1]]
a[1][1]
a[[1]][1]
a[1][[1]]
a[["x"]]
b <- list(a = list(b = list(c = list(d = 1))))
b
b[[c('a', 'b', 'c', 'd')]]
b <- list(a = list(b = list(c = list(d = 1))))
b
var <- "cyl"
mtcars$var
mtcars[[var]]
x <- list(abc = 1)
x
x$a
x[["a"]]
x[["abc"]] # 1
x <- 1:5
x
x[c(1, 2)] <- 2:3
x
x[-1] <- 4:1
x
head(mtcars)
mtcars[] <- lapply(mtcars, as.integer)
head(mtcars)
mtcars <- lapply(mtcars, as.integer)
head(mtcars)
x <- c('m', 'f', 'u', 'f', 'f', 'm', 'm')
x
lookup <- c(m = "Male", f = 'Female', u = NA)
lookup
lookup[x]
unname(lookup[x])
x1 <- 1:10 %% 2 == 0
x1
witch(x1)
which(x1)
x2 <- which(x1)
x2
y1 <- 1:10 %% 5 == 0
y1
y2 <- which(y1)
y2
intersect(x2, y2)
x1 & y1
union(x2, y2)
setdiff(x2, y2)
x1 <- 1:10 %% 2 == 0
x1
install.packages('rvest')
library(rvest)
library(stringr)
library(dplyr)
library(lubridate)
library(readr)
webpage <- read_html("https://www.nytimes.com/interactive/2017/06/23/opinion/trumps-lies.html")
webpage
gc()
library(rvest)
library(stringr)
library(dplyr)
library(lubridate)     # trata dadas
library(readr)
?html_nodes
webpage <- read_html("https://www.nytimes.com/interactive/2017/06/23/opinion/trumps-lies.html")
webpage
View(webpage)
results <-
webpage %>%
html_nodes(".short-desc")
webpage
View(webpage)
results
records <- vector("list", length = length(results))
records
for(i in seq_along(results)){
date <-
str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <-
str_sub(xml_contents(results[i])[2] %>%
html_text(trim = TRUE), 2, -2)
explanation <-
str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE), 2, -2)
url <-
results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data.frame(date = date,
lie = lie,
explanation = explanation,
url = url)
}
records
df <- bind_rows(records)
df
for (i in seq_along(results)) {
date <- str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <- str_sub(xml_contents(results[i])[2] %>% html_text(trim = TRUE), 2, -2)
explanation <- str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE), 2, -2)
url <- results[i] %>% html_nodes("a") %>% html_attr("href")
records[[i]] <- data_frame(date = date, lie = lie, explanation = explanation, url = url)
}
for(i in seq_along(results)){
date <-
str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <-
str_sub(results[[i]] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), 2)
explanation <-
str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE), 2, -2)
url <-
results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data.frame(date = date,
lie = lie,
explanation = explanation,
url = url)
}
records
df <- bind_rows(records)
df
View(df)
gc()
webpage <- read_html("https://www.nytimes.com/interactive/2017/06/23/opinion/trumps-lies.html")
results <-
webpage %>%
html_nodes(".short-desc")
records <- vector("list", length = length(results))   # criando uma lista vazia com o comprimto de resuls
for(i in seq_along(results)){
date <-
str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <-
str_sub(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), 2)
explanation <-
str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE), 2, -2)
url <-
results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data.frame(date = date,
lie = lie,
explanation = explanation,
url = url)
}
df <- bind_rows(records)
View(df)
View(df)
for(i in seq_along(results)){
date <-
str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <-
str_sub(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE))
explanation <-
str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE))
url <-
results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data.frame(date = date,
lie = lie,
explanation = explanation,
url = url)
}
df <- bind_rows(records)
View(df)
for(i in seq_along(results)){
date <-
str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <-
str_sub(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), 2)
explanation <-
str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE), 2, -2)
url <-
results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data.frame(date = date,
lie = lie,
explanation = explanation,
url = url)
}
df <- bind_rows(records)
View(df)
for(i in seq_along(results)){
date <-
str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <-
str_sub(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE))
explanation <-
str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE), 2, -2)
url <-
results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[i] <- data.frame(date = date,
lie = lie,
explanation = explanation,
url = url)
}
df <- bind_rows(records)
for(i in seq_along(results)){
date <-
str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <-
str_sub(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE))
explanation <-
str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE), 2, -2)
url <-
results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data.frame(date = date,
lie = lie,
explanation = explanation,
url = url)
}
df <- bind_rows(records)
for(i in seq_along(results)){
date <-
str_c(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE), ', 2017')
lie <-
str_sub(results[i] %>%
html_nodes("strong") %>%
html_text(trim = TRUE))
explanation <-
str_sub(results[i] %>%
html_nodes(".short-truth") %>%
html_text(trim = TRUE), 2, -2)
url <-
results[i] %>%
html_nodes("a") %>%
html_attr("href")
records[[i]] <- data.frame(date = date,
lie = lie,
explanation = explanation,
url = url)
}
View(records)
